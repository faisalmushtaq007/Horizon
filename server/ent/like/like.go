// Code generated by ent, DO NOT EDIT.

package like

import (
	"time"
)

const (
	// Label holds the string label denoting the like type in the database.
	Label = "like"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldSongID holds the string denoting the song_id field in the database.
	FieldSongID = "song_id"
	// FieldDateAdded holds the string denoting the date_added field in the database.
	FieldDateAdded = "date_added"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// EdgeSong holds the string denoting the song edge name in mutations.
	EdgeSong = "song"
	// Table holds the table name of the like in the database.
	Table = "likes"
	// UserTable is the table that holds the user relation/edge.
	UserTable = "likes"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_id"
	// SongTable is the table that holds the song relation/edge.
	SongTable = "likes"
	// SongInverseTable is the table name for the Song entity.
	// It exists in this package in order to avoid circular dependency with the "song" package.
	SongInverseTable = "songs"
	// SongColumn is the table column denoting the song relation/edge.
	SongColumn = "song_id"
)

// Columns holds all SQL columns for like fields.
var Columns = []string{
	FieldID,
	FieldUserID,
	FieldSongID,
	FieldDateAdded,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultDateAdded holds the default value on creation for the "date_added" field.
	DefaultDateAdded func() time.Time
)
